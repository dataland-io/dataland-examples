moduleId: import-csv-example

buildCommand: npm run build

tables:
  # Defines the trigger table, which will contain a button column that triggers the import into the imported records table
  # You can rename these tables, but make sure you update the references in the `importCsv.ts` file as well.
  - tableId: records-trigger-table
    tableName: "Import Trigger"
    autoMigrate: true
    columnDescriptors:
      - columnId: "trigger"
        columnName: "Trigger"
        dataType: int32
        columnAnnotations:
          dataland.io/column-display-config: |
            {
              "type": "button",
              "label": "Sync from CSV",
              "theme": "blue"
            }

      - columnId: "last-pressed"
        columnName: "Last pressed"
        dataType: string

  # Defines the imported records table, which will contain the data from the CSV file
  # TODO: Add / delete / update columns below such that the columnNames are the same as what you are updating in the importCsv.ts function
  - tableId: imported-records-from-csv-table
    tableName: "Records from CSV"
    autoMigrate: true
    columnDescriptors:
      - columnId: "ps-partkey"
        columnName: "ps_partkey"
        dataType: string
      - columnId: "ps-suppkey"
        columnName: "ps_suppkey"
        dataType: string
      - columnId: "ps-availqty"
        columnName: "ps_availqty"
        dataType: string
      - columnId: "ps-supplycost"
        columnName: "ps_supplycost"
        dataType: string
      - columnId: "ps-comment"
        columnName: "ps_comment"
        dataType: string

workers:
  - workerId: csv-import
    scriptPath: dist/importCsv.bundle.js
